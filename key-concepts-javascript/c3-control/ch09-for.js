/* =====09. for 반복문===== */
/**
 * ## 1. 반복문(Loop)
 * 정해진 조건에 따라 특정 코드를 반복적으로 실행하도록 하는 구문
 * 반복문을 설계할 때는 "어떤 조건에서, 얼마나 반복할 것인가?"를 명확히 하는 것이 중요
 */

/**
 * ## 2. for문
 * 'for'문은 반복 횟수가 명확할 때 주로 사용되며, 세 부분으로 구성된 헤더를 가진다.
 *
 * ### 기본 구조
 * for (초기화; 조건식; 증감문) {
 *   동작; // 반복 실행할 코드
 * }
 *
 * 1) 초기화 (Initializtion)
 * 반복문이 시작될 때 '단 한 번' 실행된다.
 * 반복 횟수를 세는 카운터 변수를 주로 선언
 * ex) let i = 0;
 *
 * 2) 조건 부분 (Condition)
 * 코드를 반복 실행하기 '전에' 매번 검사한다.
 * 해당 식이 'true'여야만 코드가 실행된다.
 * ex) i < 10;
 *
 * 3) 증감문 (Final Expression)
 * 반복문의 코드를 한 번 실행한 '직후에' 매번 실행된다.
 * 카운터 변수의 값을 증가시키거나 감소시키는 역할을 한다.
 */

for (let i = 1; i <= 10; i++) {
  console.log(`${i} 배고파!!`);
}

/**
 * ## 3. for문의 특징
 * 
 * 1) 스코프 (Scope)
 * 'for'문의 초기화 부분에서 'let'이나 'const'로 선언된 변수는 'for'문 블록 '{}' 안에서만
    사용할 수 있는 '지역 변수'이다.
 */
for (let i = 1; i <= 10; i++) {
  console.log(`${i} 배고파!!`);
}
// console.log(i); // Error: i is not defined

console.log('');

/**
 * 2) 생략 가능한 부분들
 * 'for'문은 각 부분의 필요에 따라 생략할 수 있지만, 
    각 부분을 구분하는 ;(세미콜론)은 절대 생략할 수 없다.
 */

/**
 * (1) 초기화 생략 (변수를 밖에서 선언)
 */
let i = 1;
for (; i <= 10; i++) {
  console.log(`${i} 배고파!!`);
}
console.log('');
/**
 * (2) 증감문 생략 (블록 내부에 작성)
 */
for (let i = 1; i <= 10; ) {
  console.log(`${i} 배고파!!`);
  i++;
}

/**
 * ## Tip
 * 코드의 가독성과 의도를 명확히 하기 위해,
   반복 조건을 제어하는 코드는 가급적 'for'문의 헤더 소괄호() 안에 모두 작성하는 것이 좋다.
 */
